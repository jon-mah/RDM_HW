geom_line(aes(x=x_axis, y=neugamma_sfs, color='neugamma_sfs')) +
geom_point(aes(x=x_axis, y=empirical_sfs, color='empirical_sfs')) +
geom_line(aes(x=x_axis, y=empirical_sfs, color='empirical_sfs')) +
scale_x_continuous(name='Frequency in Sample', breaks=x_axis, limits = c(1, 8)) +
scale_y_continuous(name='Proportion of SNps') +
scale_color_manual(values=c('#FF6347', '#9400D3', '#009E73'),
name='Data Type',
breaks=c('gamma_sfs', 'neugamma_sfs', 'empirical_sfs'),
labels=c('syn_sfs', 'nonsyn_sfs', 'model_sfs')) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
p_df <- ggplot(data=df, aes(x=x_axis, y=gamma_sfs, color='syn_sfs')) +
geom_point() +
geom_line() +
geom_point(aes(x=x_axis, y=neugamma_sfs, color='nonsyn_sfs')) +
geom_line(aes(x=x_axis, y=neugamma_sfs, color='nonsyn_sfs')) +
geom_point(aes(x=x_axis, y=empirical_sfs, color='model_sfs')) +
geom_line(aes(x=x_axis, y=empirical_sfs, color='model_sfs')) +
scale_x_continuous(name='Frequency in Sample', breaks=x_axis, limits = c(1, 8)) +
scale_y_continuous(name='Proportion of SNps') +
scale_color_manual(values=c('#FF6347', '#9400D3', '#009E73'),
name='Data Type',
breaks=c('syn_sfs', 'nonsyn_sfs', 'model_sfs'),
labels=c('syn_sfs', 'nonsyn_sfs', 'model_sfs')) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
plot_sfs_comparison <- function(gamma_sfs, neugamma_sfs, empirical_sfs) {
# It is assumed that the given sfs is folded, and describes 16 individuals.
x_axis = 1:8
# gamma_sfs = gamma_sfs / sum(gamma_sfs)
# neugamma_sfs = neugamma_sfs / sum(neugamma_sfs)
# empirical_sfs = empirical_sfs / sum(empirical_sfs)
df = data.frame(gamma_sfs = gamma_sfs,
neugamma_sfs = neugamma_sfs,
empirical_sfs = empirical_sfs,
x_axis = x_axis)
p_df <- ggplot(data=df, aes(x=x_axis, y=gamma_sfs, color='syn_sfs')) +
geom_point() +
geom_line() +
geom_point(aes(x=x_axis, y=neugamma_sfs, color='nonsyn_sfs')) +
geom_line(aes(x=x_axis, y=neugamma_sfs, color='nonsyn_sfs')) +
geom_point(aes(x=x_axis, y=empirical_sfs, color='model_sfs')) +
geom_line(aes(x=x_axis, y=empirical_sfs, color='model_sfs')) +
scale_x_continuous(name='Frequency in Sample', breaks=x_axis, limits = c(1, 8)) +
scale_y_continuous(name='Proportion of SNps') +
scale_color_manual(values=c('#FF6347', '#9400D3', '#009E73'),
name='Data Type',
breaks=c('syn_sfs', 'nonsyn_sfs', 'model_sfs'),
labels=c('syn_sfs', 'nonsyn_sfs', 'model_sfs')) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
return(p_df)
}
plot_sfs_comparison(AW_time_neutral_syn_0, AW_time_neutral_nonsyn_0, AW_time_neutral_model_0) + ggtitle('Generation 0 sfs comparison')
plot_sfs_comparison(AW_time_neutral_syn_100, AW_time_neutral_nonsyn_100, AW_time_neutral_model_100) + ggtitle('Generation 100 sfs comparison')
plot_sfs_comparison(AW_time_neutral_syn_500, AW_time_neutral_nonsyn_500, AW_time_neutral_model_500) + ggtitle('Generation 500 sfs comparison')
plot_sfs_comparison(AW_time_neutral_syn_1000, AW_time_neutral_nonsyn_1000, AW_time_neutral_model_1000) + ggtitle('Generation 1000 sfs comparison')
plot_sfs_comparison(AW_time_neutral_syn_0, AW_time_neutral_nonsyn_0, AW_time_neutral_model_0) + ggtitle('Generation 0 sfs comparison')
plot_sfs_comparison(AW_time_neutral_syn_100, AW_time_neutral_nonsyn_100, AW_time_neutral_model_100) + ggtitle('Generation 100 sfs comparison')
plot_sfs_comparison(AW_time_neutral_syn_500, AW_time_neutral_nonsyn_500, AW_time_neutral_model_500) + ggtitle('Generation 500 sfs comparison')
plot_sfs_comparison(AW_time_neutral_syn_1000, AW_time_neutral_nonsyn_1000, AW_time_neutral_model_1000) + ggtitle('Generation 1000 sfs comparison')
s_0_rec_10 = read.csv('./Data/s_0_rec/sample_10_summary.csv')
s_0_001_add_1000 = read.csv('./Data/s_0_001_add/sample_1000_summary.csv') # 0_001_add_1000
s_0_001_rec_1000 = read.csv('./Data/s_0_001_rec/sample_1000_summary.csv') # 0_001_rec_1000
library(ggplot2)
setwd("C:/Users/jonat/Desktop/GitHub/RDM_HW")
s_0_rec_10 = read.csv('./Data/s_0_rec/sample_10_summary.csv')
s_0_001_add_1000 = read.csv('./Data/s_0_001_add/sample_1000_summary.csv') # 0_001_add_1000
s_0_001_rec_1000 = read.csv('./Data/s_0_001_rec/sample_1000_summary.csv') # 0_001_rec_1000
s_0_01_add_1000 = read.csv('./Data/s_0_01_add/sample_1000_summary.csv') # 0_01_add_1000
s_0_01_rec_1000 = read.csv('./Data/s_0_01_rec/sample_1000_summary.csv') # 0_01_rec_1000
s_0_1_add_1000 = read.csv('./Data/s_0_1_add/sample_1000_summary.csv') # 0_1_add_1000
s_0_1_rec_1000 = read.csv('./Data/s_0_1_rec/sample_1000_summary.csv') # 0_1_rec_1000
s_0_add_1000 = read.csv('./Data/s_0_add/sample_1000_summary.csv') # 0_1000
s_0_rec_1000 = read.csv('./Data/s_0_rec/sample_1000_summary.csv') # 0_1000
# chi-squared p-values
chi_p_s_0_add_1000 = s_0_add_1000$chi_p_values
chi_p_s_0_001_add_1000 = s_0_001_add_1000$chi_p_values
chi_p_s_0_01_add_1000 = s_0_01_add_1000$chi_p_values
chi_p_s_0_1_add_1000 = s_0_1_add_1000$chi_p_values
chi_p_s_0_rec_1000 = s_0_rec_1000$chi_p_values
chi_p_s_0_001_rec_1000 = s_0_001_rec_1000$chi_p_values
chi_p_s_0_01_rec_1000 = s_0_01_rec_1000$chi_p_values
chi_p_s_0_1_rec_1000 = s_0_1_rec_1000$chi_p_values
# chi-squared p-values
chi_p_s_0_add_1000 = s_0_add_1000$chi_pr_values
chi_p_s_0_001_add_1000 = s_0_001_add_1000$chi_pr_values
chi_p_s_0_01_add_1000 = s_0_01_add_1000$chi_pr_values
chi_p_s_0_1_add_1000 = s_0_1_add_1000$chi_pr_values
chi_p_s_0_rec_1000 = s_0_rec_1000$chi_pr_values
chi_p_s_0_001_rec_1000 = s_0_001_rec_1000$chi_pr_values
chi_p_s_0_01_rec_1000 = s_0_01_rec_1000$chi_pr_values
chi_p_s_0_1_rec_1000 = s_0_1_rec_1000$chi_pr_values
fisher_p_s_0_1_rec_1000 = s_0_1_rec_1000$fisher_p_n_homo_geq
# fisher p-values
fisher_p_s_0_add_1000 = s_0_add_1000$fisher_p_n_homo_geq
fisher_p_s_0_001_add_1000 = s_0_001_add_1000$fisher_p_n_homo_geq
fisher_p_s_0_01_add_1000 = s_0_01_add_1000$fisher_p_n_homo_geq
fisher_p_s_0_1_add_1000 = s_0_1_add_1000$fisher_p_n_homo_geq
fisher_p_s_0_rec_1000 = s_0_rec_1000$fisher_p_n_homo_geq
fisher_p_s_0_001_rec_1000 = s_0_001_rec_1000$fisher_p_n_homo_geq
fisher_p_s_0_01_rec_1000 = s_0_01_rec_1000$fisher_p_n_homo_geq
fisher_p_s_0_1_rec_1000 = s_0_1_rec_1000$fisher_p_n_homo_geq
log_chi_p_s_0_add_1000 = -log10(sort(chi_p_s_0_add_1000))
log_chi_p_s_0_rec_1000 = -log10(sort(chi_p_s_0_rec_1000))
log_chi_p_s_0_001_add_1000 = -log10(sort(chi_p_s_0_001_add_1000))
log_chi_p_s_0_001_rec_1000 = -log10(sort(chi_p_s_0_001_rec_1000))
log_chi_p_s_0_01_add_1000 = -log10(sort(chi_p_s_0_01_add_1000))
log_chi_p_s_0_01_rec_1000 = -log10(sort(chi_p_s_0_01_rec_1000))
log_chi_p_s_0_1_add_1000 = -log10(sort(chi_p_s_0_1_add_1000))
log_chi_p_s_0_1_rec_1000 = -log10(sort(chi_p_s_0_1_rec_1000))
log_fisher_p_s_0_add_1000 = -log10(sort(fisher_p_s_0_add_1000))
log_fisher_p_s_0_rec_1000 = -log10(sort(fisher_p_s_0_rec_1000))
log_fisher_p_s_0_001_add_1000 = -log10(sort(fisher_p_s_0_001_add_1000))
log_fisher_p_s_0_001_rec_1000 = -log10(sort(fisher_p_s_0_001_rec_1000))
log_fisher_p_s_0_01_add_1000 = -log10(sort(fisher_p_s_0_01_add_1000))
log_fisher_p_s_0_01_rec_1000 = -log10(sort(fisher_p_s_0_01_rec_1000))
log_fisher_p_s_0_1_add_1000 = -log10(sort(fisher_p_s_0_1_add_1000))
log_fisher_p_s_0_1_rec_1000 = -log10(sort(fisher_p_s_0_1_rec_1000))
y_axis_0_001_add_1000 = -log10(1:nrow(s_0_001_add_1000) / nrow(s_0_001_add_1000))
y_axis_0_01_add_1000 = -log10(1:nrow(s_0_01_add_1000) / nrow(s_0_01_add_1000))
y_axis_0_1_add_1000 = -log10(1:nrow(s_0_1_add_1000) / nrow(s_0_1_add_1000))
y_axis_0_1000 = -log10(1:nrow(s_0_add_1000) / nrow(s_0_add_1000))
y_axis_0_001_rec_1000 = -log10(1:nrow(s_0_001_rec_1000) / nrow(s_0_001_rec_1000))
y_axis_0_01_rec_1000 = -log10(1:nrow(s_0_01_rec_1000) / nrow(s_0_01_rec_1000))
y_axis_0_1_rec_1000 = -log10(1:nrow(s_0_1_rec_1000) / nrow(s_0_1_rec_1000))
data_0_001_add_1000 = data.frame(y_axis_0_001_add_1000, log_chi_p_s_0_001_add_1000, log_fisher_p_s_0_001_add_1000)
data_0_1000 = data.frame(y_axis_0_1000, log_chi_p_s_0_add_1000, log_chi_p_s_0_rec_1000,log_fisher_p_s_0_add_1000, log_fisher_p_s_0_rec_1000)
data_0_001_rec_1000 = data.frame(y_axis_0_001_rec_1000, log_chi_p_s_0_001_rec_1000, log_fisher_p_s_0_001_rec_1000)
data_0_01_add_1000 = data.frame(y_axis_0_01_add_1000, log_chi_p_s_0_01_add_1000, log_fisher_p_s_0_01_add_1000)
data_0_1_add_1000 = data.frame(y_axis_0_1_add_1000, log_chi_p_s_0_1_add_1000, log_fisher_p_s_0_1_add_1000)
data_0_01_rec_1000 = data.frame(y_axis_0_01_rec_1000, log_chi_p_s_0_01_rec_1000, log_fisher_p_s_0_01_rec_1000)
data_0_1_rec_1000 = data.frame(y_axis_0_1_rec_1000, log_chi_p_s_0_1_rec_1000, log_fisher_p_s_0_1_rec_1000)
p_0_001_add_1000 = ggplot(data=data_0_001_add_1000, aes(y=log_chi_p_s_0_001_add_1000, x=y_axis_0_001_add_1000, color='chi_additive')) +
geom_point() +
geom_point(aes(y=log_fisher_p_s_0_001_add_1000, x=y_axis_0_001_add_1000, color='fisher_additive')) +
xlab('-log10 of expected p-values') +
ylab('-log10 of observed p-values') +
scale_color_manual(values=c('blue', 'green'),
name='P-value calculation',
breaks=c('chi_additive', 'fisher_additive'),
labels=c('chi_additive', 'fisher_additive')) +
ggtitle('s = 0.001') +
geom_abline(slope=1) +
xlim(0, 4) +
ylim(0, 4) +
geom_hline(color = 'red', yintercept = -log10(0.05))
p_0_001_add_1000
p_0_001_rec_1000 = ggplot(data=data_0_001_rec_1000, aes(y=log_chi_p_s_0_001_rec_1000, x=y_axis_0_001_rec_1000, color='chi_recessive')) +
geom_point() +
geom_point(aes(y=log_fisher_p_s_0_001_rec_1000, x=y_axis_0_001_rec_1000, color='fisher_recessive')) +
xlab('-log10 of expected p-values') +
ylab('-log10 of observed p-values') +
scale_color_manual(values=c('blue', 'green'),
name='P-value calculation',
breaks=c('chi_recessive', 'fisher_recessive'),
labels=c('chi_recessive', 'fisher_recessive')) +
ggtitle('s = 0.001') +
geom_abline(slope=1) +
xlim(0, 3) +
ylim(0, 3) +
geom_hline(color = 'red', yintercept = -log10(0.05))
p_0_001_rec_1000
p_0_1000 = ggplot(data=data_0_1000, aes(y=log_chi_p_s_0_add_1000, x=y_axis_0_1000, color='chi_additive')) +
geom_point(shape=3) +
geom_point(aes(y=log_fisher_p_s_0_add_1000, x=y_axis_0_1000, color='fisher_additive'), shape=3) +
geom_point(aes(y=log_chi_p_s_0_rec_1000, x=y_axis_0_1000, color='chi_recessive'), shape=4) +
geom_point(aes(y=log_fisher_p_s_0_rec_1000, x=y_axis_0_1000, color='fisher_recessive'), shape=4) +
xlab('-log10 of expected p-values') +
ylab('-log10 of observed p-values') +
scale_color_manual(values=c('blue', 'green', 'purple', 'orange'),
name='P-value calculation',
breaks=c('chi_additive', 'fisher_additive', 'chi_recessive', 'fisher_recessive'),
labels=c('chi_additive', 'fisher_additive', 'chi_recessive', 'fisher_recessive')) +
ggtitle('s = 0') +
geom_abline(slope=1) +
xlim(0, 4) +
ylim(0, 4) +
geom_hline(color = 'red', yintercept = -log10(0.05))
p_0_1000
p_0_01_add_1000 = ggplot(data=data_0_01_add_1000, aes(y=log_chi_p_s_0_01_add_1000, x=y_axis_0_01_add_1000, color='chi_additive')) +
geom_point() +
geom_point(aes(y=log_fisher_p_s_0_01_add_1000, x=y_axis_0_01_add_1000, color='fisher_additive')) +
xlab('-log10 of expected p-values') +
ylab('-log10 of observed p-values') +
scale_color_manual(values=c('blue', 'green'),
name='P-value calculation',
breaks=c('chi_additive', 'fisher_additive'),
labels=c('chi_additive', 'fisher_additive')) +
ggtitle('s = 0.01') +
geom_abline(slope=1) +
xlim(0, 4) +
ylim(0, 4) +
geom_hline(color = 'red', yintercept = -log10(0.05))
p_0_01_add_1000
p_0_1_add_1000 = ggplot(data=data_0_1_add_1000, aes(y=log_chi_p_s_0_1_add_1000, x=y_axis_0_1_add_1000, color='chi_additive')) +
geom_point() +
geom_point(aes(y=log_fisher_p_s_0_1_add_1000, x=y_axis_0_1_add_1000, color='fisher_additive')) +
xlab('-log10 of expected p-values') +
ylab('-log10 of observed p-values') +
scale_color_manual(values=c('blue', 'green'),
name='P-value calculation',
breaks=c('chi_additive', 'fisher_additive'),
labels=c('chi_additive', 'fisher_additive')) +
ggtitle('s = 0.1') +
geom_abline(slope=1) +
xlim(0, 2) +
ylim(0, 2) +
geom_hline(color = 'red', yintercept = -log10(0.05))
p_0_1_add_1000
p_0_1_add_1000
p_0_01_add_1000
p_0_1_add_1000 = ggplot(data=data_0_1_add_1000, aes(y=log_chi_p_s_0_1_add_1000, x=y_axis_0_1_add_1000, color='chi_additive')) +
geom_point() +
geom_point(aes(y=log_fisher_p_s_0_1_add_1000, x=y_axis_0_1_add_1000, color='fisher_additive')) +
xlab('-log10 of expected p-values') +
ylab('-log10 of observed p-values') +
scale_color_manual(values=c('blue', 'green'),
name='P-value calculation',
breaks=c('chi_additive', 'fisher_additive'),
labels=c('chi_additive', 'fisher_additive')) +
ggtitle('s = 0.1') +
geom_abline(slope=1) +
xlim(0, 2) +
ylim(0, 2) +
geom_hline(color = 'red', yintercept = -log10(0.05))
p_0_1_add_1000
p_0_1_rec_1000 = ggplot(data=data_0_1_rec_1000, aes(y=log_chi_p_s_0_1_rec_1000, x=y_axis_0_1_rec_1000, color='chi_recessive')) +
geom_point() +
geom_point(aes(y=log_fisher_p_s_0_1_rec_1000, x=y_axis_0_1_rec_1000, color='fisher_recessive')) +
xlab('-log10 of expected p-values') +
ylab('-log10 of observed p-values') +
scale_color_manual(values=c('blue', 'green'),
name='P-value calculation',
breaks=c('chi_recessive', 'fisher_recessive'),
labels=c('chi_recessive', 'fisher_recessive')) +
ggtitle('s = 0.1') +
geom_abline(slope=1) +
xlim(0, 3)+
ylim(0, 3) +
geom_hline(color = 'red', yintercept = -log10(0.05))
p_0_1_rec_1000
p_0_01_rec_1000 = ggplot(data=data_0_01_rec_1000, aes(y=log_chi_p_s_0_01_rec_1000, x=y_axis_0_01_rec_1000, color='chi_recessive')) +
geom_point() +
geom_point(aes(y=log_fisher_p_s_0_01_rec_1000, x=y_axis_0_01_rec_1000, color='fisher_recessive')) +
xlab('-log10 of expected p-values') +
ylab('-log10 of observed p-values') +
scale_color_manual(values=c('blue', 'green'),
name='P-value calculation',
breaks=c('chi_recessive', 'fisher_recessive'),
labels=c('chi_recessive', 'fisher_recessive')) +
ggtitle('s = 0.01') +
geom_abline(slope=1) +
xlim(0, 3) +
ylim(0, 3) +
geom_hline(color = 'red', yintercept = -log10(0.05))
p_0_01_rec_1000
s_0_rec_10$allele_count = as.factor(s_0_rec_10$allele_count)
p_fisher_boxplot = ggplot(data=s_0_rec_10, aes(x=allele_count, y=fisher_p_n_homo_geq)) +
geom_boxplot() +
ggtitle("s=0, Fisher's Exact Test") +
xlab('allele count') +
ylab('p-values')
p_fisher_boxplot
p_chi_boxplot = ggplot(data=s_0_rec_10, aes(x=allele_count, y=chi_p_values)) +
geom_boxplot() +
ggtitle("s=0, chi-squared Test") +
xlab('allele count') +
ylab('p-values')
p_chi_boxplot
p_chi_boxplot = ggplot(data=s_0_rec_10, aes(x=allele_count, y=chi_pr_values)) +
geom_boxplot() +
ggtitle("s=0, chi-squared Test") +
xlab('allele count') +
ylab('p-values')
p_chi_boxplot
p_0_001_add_1000 = ggplot(data=data_0_001_add_1000, aes(y=log_chi_p_s_0_001_add_1000, x=y_axis_0_001_add_1000, color='chi_additive')) +
geom_point() +
geom_point(aes(y=log_fisher_p_s_0_001_add_1000, x=y_axis_0_001_add_1000, color='fisher_additive')) +
xlab('-log10 of expected p-values') +
ylab('-log10 of observed p-values') +
scale_color_manual(values=c('blue', 'green'),
name='P-value calculation',
breaks=c('chi_additive', 'fisher_additive'),
labels=c('chi_additive', 'fisher_additive')) +
ggtitle('s = 0.001') +
geom_abline(slope=1) +
xlim(0, 4) +
ylim(0, 4) +
geom_hline(color = 'red', yintercept = -log10(0.05))
p_0_001_add_1000
fisher_p_s_0_add_1000 = s_0_add_1000$fisher_p_n_homo_leq
fisher_p_s_0_001_add_1000 = s_0_001_add_1000$fisher_p_n_homo_leq
fisher_p_s_0_01_add_1000 = s_0_01_add_1000$fisher_p_n_homo_leq
fisher_p_s_0_1_add_1000 = s_0_1_add_1000$fisher_p_n_homo_leq
fisher_p_s_0_rec_1000 = s_0_rec_1000$fisher_p_n_homo_leq
fisher_p_s_0_001_rec_1000 = s_0_001_rec_1000$fisher_p_n_homo_lleq
fisher_p_s_0_01_rec_1000 = s_0_01_rec_1000$fisher_p_n_homo_leq
fisher_p_s_0_1_rec_1000 = s_0_1_rec_1000$fisher_p_n_homo_leq
log_chi_p_s_0_add_1000 = -log10(sort(chi_p_s_0_add_1000))
log_chi_p_s_0_rec_1000 = -log10(sort(chi_p_s_0_rec_1000))
log_chi_p_s_0_001_add_1000 = -log10(sort(chi_p_s_0_001_add_1000))
log_chi_p_s_0_001_rec_1000 = -log10(sort(chi_p_s_0_001_rec_1000))
log_chi_p_s_0_01_add_1000 = -log10(sort(chi_p_s_0_01_add_1000))
log_chi_p_s_0_01_rec_1000 = -log10(sort(chi_p_s_0_01_rec_1000))
log_chi_p_s_0_1_add_1000 = -log10(sort(chi_p_s_0_1_add_1000))
log_chi_p_s_0_1_rec_1000 = -log10(sort(chi_p_s_0_1_rec_1000))
log_fisher_p_s_0_add_1000 = -log10(sort(fisher_p_s_0_add_1000))
log_fisher_p_s_0_rec_1000 = -log10(sort(fisher_p_s_0_rec_1000))
log_fisher_p_s_0_001_add_1000 = -log10(sort(fisher_p_s_0_001_add_1000))
log_fisher_p_s_0_001_rec_1000 = -log10(sort(fisher_p_s_0_001_rec_1000))
log_fisher_p_s_0_01_add_1000 = -log10(sort(fisher_p_s_0_01_add_1000))
log_fisher_p_s_0_01_rec_1000 = -log10(sort(fisher_p_s_0_01_rec_1000))
log_fisher_p_s_0_1_add_1000 = -log10(sort(fisher_p_s_0_1_add_1000))
log_fisher_p_s_0_1_rec_1000 = -log10(sort(fisher_p_s_0_1_rec_1000))
fisher_p_s_0_001_rec_1000
fisher_p_s_0_001_rec_1000 = s_0_001_rec_1000$fisher_p_n_homo_leq
log_chi_p_s_0_add_1000 = -log10(sort(chi_p_s_0_add_1000))
log_chi_p_s_0_rec_1000 = -log10(sort(chi_p_s_0_rec_1000))
log_chi_p_s_0_001_add_1000 = -log10(sort(chi_p_s_0_001_add_1000))
log_chi_p_s_0_001_rec_1000 = -log10(sort(chi_p_s_0_001_rec_1000))
log_chi_p_s_0_01_add_1000 = -log10(sort(chi_p_s_0_01_add_1000))
log_chi_p_s_0_01_rec_1000 = -log10(sort(chi_p_s_0_01_rec_1000))
log_chi_p_s_0_1_add_1000 = -log10(sort(chi_p_s_0_1_add_1000))
log_chi_p_s_0_1_rec_1000 = -log10(sort(chi_p_s_0_1_rec_1000))
log_fisher_p_s_0_add_1000 = -log10(sort(fisher_p_s_0_add_1000))
log_fisher_p_s_0_001_add_1000 = -log10(sort(fisher_p_s_0_001_add_1000))
log_fisher_p_s_0_rec_1000 = -log10(sort(fisher_p_s_0_rec_1000))
log_fisher_p_s_0_001_rec_1000 = -log10(sort(fisher_p_s_0_001_rec_1000))
log_fisher_p_s_0_01_add_1000 = -log10(sort(fisher_p_s_0_01_add_1000))
log_fisher_p_s_0_01_rec_1000 = -log10(sort(fisher_p_s_0_01_rec_1000))
log_fisher_p_s_0_1_rec_1000 = -log10(sort(fisher_p_s_0_1_rec_1000))
log_fisher_p_s_0_1_add_1000 = -log10(sort(fisher_p_s_0_1_add_1000))
y_axis_0_001_add_1000 = -log10(1:nrow(s_0_001_add_1000) / nrow(s_0_001_add_1000))
y_axis_0_01_add_1000 = -log10(1:nrow(s_0_01_add_1000) / nrow(s_0_01_add_1000))
y_axis_0_1_add_1000 = -log10(1:nrow(s_0_1_add_1000) / nrow(s_0_1_add_1000))
y_axis_0_1000 = -log10(1:nrow(s_0_add_1000) / nrow(s_0_add_1000))
y_axis_0_001_rec_1000 = -log10(1:nrow(s_0_001_rec_1000) / nrow(s_0_001_rec_1000))
y_axis_0_01_rec_1000 = -log10(1:nrow(s_0_01_rec_1000) / nrow(s_0_01_rec_1000))
y_axis_0_1_rec_1000 = -log10(1:nrow(s_0_1_rec_1000) / nrow(s_0_1_rec_1000))
data_0_001_add_1000 = data.frame(y_axis_0_001_add_1000, log_chi_p_s_0_001_add_1000, log_fisher_p_s_0_001_add_1000)
data_0_1000 = data.frame(y_axis_0_1000, log_chi_p_s_0_add_1000, log_chi_p_s_0_rec_1000,log_fisher_p_s_0_add_1000, log_fisher_p_s_0_rec_1000)
data_0_001_rec_1000 = data.frame(y_axis_0_001_rec_1000, log_chi_p_s_0_001_rec_1000, log_fisher_p_s_0_001_rec_1000)
data_0_01_add_1000 = data.frame(y_axis_0_01_add_1000, log_chi_p_s_0_01_add_1000, log_fisher_p_s_0_01_add_1000)
data_0_1_add_1000 = data.frame(y_axis_0_1_add_1000, log_chi_p_s_0_1_add_1000, log_fisher_p_s_0_1_add_1000)
data_0_01_rec_1000 = data.frame(y_axis_0_01_rec_1000, log_chi_p_s_0_01_rec_1000, log_fisher_p_s_0_01_rec_1000)
data_0_1_rec_1000 = data.frame(y_axis_0_1_rec_1000, log_chi_p_s_0_1_rec_1000, log_fisher_p_s_0_1_rec_1000)
p_0_001_add_1000 = ggplot(data=data_0_001_add_1000, aes(y=log_chi_p_s_0_001_add_1000, x=y_axis_0_001_add_1000, color='chi_additive')) +
geom_point() +
geom_point(aes(y=log_fisher_p_s_0_001_add_1000, x=y_axis_0_001_add_1000, color='fisher_additive')) +
xlab('-log10 of expected p-values') +
ylab('-log10 of observed p-values') +
scale_color_manual(values=c('blue', 'green'),
name='P-value calculation',
breaks=c('chi_additive', 'fisher_additive'),
labels=c('chi_additive', 'fisher_additive')) +
ggtitle('s = 0.001') +
geom_abline(slope=1) +
xlim(0, 4) +
ylim(0, 4) +
geom_hline(color = 'red', yintercept = -log10(0.05))
p_0_001_add_1000
p_0_001_rec_1000 = ggplot(data=data_0_001_rec_1000, aes(y=log_chi_p_s_0_001_rec_1000, x=y_axis_0_001_rec_1000, color='chi_recessive')) +
geom_point() +
geom_point(aes(y=log_fisher_p_s_0_001_rec_1000, x=y_axis_0_001_rec_1000, color='fisher_recessive')) +
xlab('-log10 of expected p-values') +
ylab('-log10 of observed p-values') +
scale_color_manual(values=c('blue', 'green'),
name='P-value calculation',
breaks=c('chi_recessive', 'fisher_recessive'),
labels=c('chi_recessive', 'fisher_recessive')) +
ggtitle('s = 0.001') +
geom_abline(slope=1) +
xlim(0, 3) +
ylim(0, 3) +
geom_hline(color = 'red', yintercept = -log10(0.05))
p_0_001_rec_1000
p_0_001_add_1000 = ggplot(data=data_0_001_add_1000, aes(y=log_chi_p_s_0_001_add_1000, x=y_axis_0_001_add_1000, color='chi_additive')) +
geom_point() +
geom_point(aes(y=log_fisher_p_s_0_001_add_1000, x=y_axis_0_001_add_1000, color='fisher_additive')) +
xlab('-log10 of expected p-values') +
ylab('-log10 of observed p-values') +
scale_color_manual(values=c('blue', 'green'),
name='P-value calculation',
breaks=c('chi_additive', 'fisher_additive'),
labels=c('chi_additive', 'fisher_additive')) +
ggtitle('s = 0.001') +
geom_abline(slope=1) +
xlim(0, 4) +
ylim(0, 4) +
geom_hline(color = 'red', yintercept = -log10(0.05))
p_0_001_add_1000
p_0_001_add_1000 = ggplot(data=data_0_001_add_1000, aes(y=log_chi_p_s_0_001_add_1000, x=y_axis_0_001_add_1000, color='chi_additive')) +
geom_point() +
geom_point(aes(y=log_fisher_p_s_0_001_add_1000, x=y_axis_0_001_add_1000, color='fisher_additive')) +
xlab('-log10 of expected p-values') +
ylab('-log10 of observed p-values') +
scale_color_manual(values=c('blue', 'green'),
name='P-value calculation',
breaks=c('chi_additive', 'fisher_additive'),
labels=c('chi_additive', 'fisher_additive')) +
ggtitle('s = 0.001') +
geom_abline(slope=1) +
xlim(0, 4) +
ylim(0, 4) +
geom_hline(color = 'red', yintercept = -log10(0.05))
p_0_001_add_1000
p_0_001_rec_1000 = ggplot(data=data_0_001_rec_1000, aes(y=log_chi_p_s_0_001_rec_1000, x=y_axis_0_001_rec_1000, color='chi_recessive')) +
geom_point() +
geom_point(aes(y=log_fisher_p_s_0_001_rec_1000, x=y_axis_0_001_rec_1000, color='fisher_recessive')) +
xlab('-log10 of expected p-values') +
ylab('-log10 of observed p-values') +
scale_color_manual(values=c('blue', 'green'),
name='P-value calculation',
breaks=c('chi_recessive', 'fisher_recessive'),
labels=c('chi_recessive', 'fisher_recessive')) +
ggtitle('s = 0.001') +
geom_abline(slope=1) +
xlim(0, 3) +
ylim(0, 3) +
geom_hline(color = 'red', yintercept = -log10(0.05))
p_0_001_rec_1000
p_0_1000 = ggplot(data=data_0_1000, aes(y=log_chi_p_s_0_add_1000, x=y_axis_0_1000, color='chi_additive')) +
geom_point(shape=3) +
geom_point(aes(y=log_fisher_p_s_0_add_1000, x=y_axis_0_1000, color='fisher_additive'), shape=3) +
geom_point(aes(y=log_chi_p_s_0_rec_1000, x=y_axis_0_1000, color='chi_recessive'), shape=4) +
geom_point(aes(y=log_fisher_p_s_0_rec_1000, x=y_axis_0_1000, color='fisher_recessive'), shape=4) +
xlab('-log10 of expected p-values') +
ylab('-log10 of observed p-values') +
scale_color_manual(values=c('blue', 'green', 'purple', 'orange'),
name='P-value calculation',
breaks=c('chi_additive', 'fisher_additive', 'chi_recessive', 'fisher_recessive'),
labels=c('chi_additive', 'fisher_additive', 'chi_recessive', 'fisher_recessive')) +
ggtitle('s = 0') +
geom_abline(slope=1) +
xlim(0, 4) +
ylim(0, 4) +
geom_hline(color = 'red', yintercept = -log10(0.05))
p_0_1000
p_0_01_add_1000 = ggplot(data=data_0_01_add_1000, aes(y=log_chi_p_s_0_01_add_1000, x=y_axis_0_01_add_1000, color='chi_additive')) +
geom_point() +
geom_point(aes(y=log_fisher_p_s_0_01_add_1000, x=y_axis_0_01_add_1000, color='fisher_additive')) +
xlab('-log10 of expected p-values') +
ylab('-log10 of observed p-values') +
scale_color_manual(values=c('blue', 'green'),
name='P-value calculation',
breaks=c('chi_additive', 'fisher_additive'),
labels=c('chi_additive', 'fisher_additive')) +
ggtitle('s = 0.01') +
geom_abline(slope=1) +
xlim(0, 4) +
ylim(0, 4) +
geom_hline(color = 'red', yintercept = -log10(0.05))
p_0_01_add_1000
p_0_1_add_1000 = ggplot(data=data_0_1_add_1000, aes(y=log_chi_p_s_0_1_add_1000, x=y_axis_0_1_add_1000, color='chi_additive')) +
geom_point() +
geom_point(aes(y=log_fisher_p_s_0_1_add_1000, x=y_axis_0_1_add_1000, color='fisher_additive')) +
xlab('-log10 of expected p-values') +
ylab('-log10 of observed p-values') +
scale_color_manual(values=c('blue', 'green'),
name='P-value calculation',
breaks=c('chi_additive', 'fisher_additive'),
labels=c('chi_additive', 'fisher_additive')) +
ggtitle('s = 0.1') +
geom_abline(slope=1) +
xlim(0, 2) +
ylim(0, 2) +
geom_hline(color = 'red', yintercept = -log10(0.05))
p_0_1_add_1000
p_0_1_rec_1000 = ggplot(data=data_0_1_rec_1000, aes(y=log_chi_p_s_0_1_rec_1000, x=y_axis_0_1_rec_1000, color='chi_recessive')) +
geom_point() +
geom_point(aes(y=log_fisher_p_s_0_1_rec_1000, x=y_axis_0_1_rec_1000, color='fisher_recessive')) +
xlab('-log10 of expected p-values') +
ylab('-log10 of observed p-values') +
scale_color_manual(values=c('blue', 'green'),
name='P-value calculation',
breaks=c('chi_recessive', 'fisher_recessive'),
labels=c('chi_recessive', 'fisher_recessive')) +
ggtitle('s = 0.1') +
geom_abline(slope=1) +
xlim(0, 3)+
ylim(0, 3) +
geom_hline(color = 'red', yintercept = -log10(0.05))
p_0_1_rec_1000
p_0_01_rec_1000 = ggplot(data=data_0_01_rec_1000, aes(y=log_chi_p_s_0_01_rec_1000, x=y_axis_0_01_rec_1000, color='chi_recessive')) +
geom_point() +
geom_point(aes(y=log_fisher_p_s_0_01_rec_1000, x=y_axis_0_01_rec_1000, color='fisher_recessive')) +
xlab('-log10 of expected p-values') +
ylab('-log10 of observed p-values') +
scale_color_manual(values=c('blue', 'green'),
name='P-value calculation',
breaks=c('chi_recessive', 'fisher_recessive'),
labels=c('chi_recessive', 'fisher_recessive')) +
ggtitle('s = 0.01') +
geom_abline(slope=1) +
xlim(0, 3) +
ylim(0, 3) +
geom_hline(color = 'red', yintercept = -log10(0.05))
p_0_01_rec_1000
s_0_rec_10$allele_count = as.factor(s_0_rec_10$allele_count)
p_fisher_boxplot = ggplot(data=s_0_rec_10, aes(x=allele_count, y=fisher_p_n_homo_geq)) +
geom_boxplot() +
ggtitle("s=0, Fisher's Exact Test") +
xlab('allele count') +
ylab('p-values')
p_fisher_boxplot
p_fisher_boxplot = ggplot(data=s_0_rec_10, aes(x=allele_count, y=fisher_p_n_homo_leq)) +
geom_boxplot() +
ggtitle("s=0, Fisher's Exact Test") +
xlab('allele count') +
ylab('p-values')
p_fisher_boxplot
